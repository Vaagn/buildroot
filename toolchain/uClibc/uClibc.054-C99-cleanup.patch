Index: uClibc/libpthread/linuxthreads.old/sysdeps/arm/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/arm/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/arm/pt-machine.h	(working copy)
@@ -23,12 +23,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* This will not work on ARM1 or ARM2 because SWP is lacking on those
    machines.  Unfortunately we have no way to detect this at compile
    time; let's hope nobody tries to use one.  */
Index: uClibc/libpthread/linuxthreads.old/sysdeps/powerpc/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/powerpc/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/powerpc/pt-machine.h	(working copy)
@@ -25,12 +25,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* For multiprocessor systems, we want to ensure all memory accesses
    are completed before we reset a lock.  On other systems, we still
    need to make sure that the compiler has flushed everything to memory.  */
Index: uClibc/libpthread/linuxthreads.old/sysdeps/sh64/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/sh64/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/sh64/pt-machine.h	(working copy)
@@ -23,13 +23,9 @@
    Boston, MA 02111-1307, USA.  */
 
 #ifndef PT_EI
-# define PT_EI extern inline
+# define PT_EI static inline
 #endif
 
-/* Spinlock implementation; required.  */
-extern long int testandset (int *spinlock);
-
-
 /* Get some notion of the current stack.  Need not be exactly the top
    of the stack, just something somewhere in the current frame.  */
 #define CURRENT_STACK_FRAME  stack_pointer
Index: uClibc/libpthread/linuxthreads.old/sysdeps/alpha/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/alpha/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/alpha/pt-machine.h	(working copy)
@@ -24,7 +24,7 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
 #ifdef __linux__
@@ -33,9 +33,6 @@
 # include <machine/pal.h>
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Get some notion of the current stack.  Need not be exactly the top
    of the stack, just something somewhere in the current frame.  */
 #define CURRENT_STACK_FRAME  stack_pointer
Index: uClibc/libpthread/linuxthreads.old/sysdeps/m68k/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/m68k/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/m68k/pt-machine.h	(working copy)
@@ -23,12 +23,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Spinlock implementation; required.  */
 PT_EI long int
 testandset (int *spinlock)
Index: uClibc/libpthread/linuxthreads.old/sysdeps/i386/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/i386/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/i386/pt-machine.h	(working copy)
@@ -24,11 +24,13 @@
 
 #ifndef __ASSEMBLER__
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
+/*
 extern long int testandset (int *spinlock);
 extern int __compare_and_swap (long int *p, long int oldval, long int newval);
+*/
 
 /* Get some notion of the current stack.  Need not be exactly the top
    of the stack, just something somewhere in the current frame.  */
Index: uClibc/libpthread/linuxthreads.old/sysdeps/nios2/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/nios2/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/nios2/pt-machine.h	(working copy)
@@ -22,11 +22,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-
 /* Spinlock implementation; required.  */
 PT_EI long int
 testandset (int *spinlock)
Index: uClibc/libpthread/linuxthreads.old/sysdeps/frv/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/frv/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/frv/pt-machine.h	(working copy)
@@ -25,7 +25,7 @@
 #ifndef __ASSEMBLER__
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
 /* Spinlock implementation; required.  */
Index: uClibc/libpthread/linuxthreads.old/sysdeps/x86_64/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/x86_64/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/x86_64/pt-machine.h	(working copy)
@@ -28,12 +28,9 @@
 
 
 # ifndef PT_EI
-#  define PT_EI extern inline __attribute__ ((always_inline))
+#  define PT_EI static inline
 # endif
 
-extern long int testandset (int *__spinlock);
-extern int __compare_and_swap (long int *__p, long int __oldval, long int __newval);
-
 /* Get some notion of the current stack.  Need not be exactly the top
    of the stack, just something somewhere in the current frame.  */
 # define CURRENT_STACK_FRAME  stack_pointer
Index: uClibc/libpthread/linuxthreads.old/sysdeps/cris/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/cris/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/cris/pt-machine.h	(working copy)
@@ -19,7 +19,7 @@
    Boston, MA 02111-1307, USA.  */
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
 PT_EI long int
Index: uClibc/libpthread/linuxthreads.old/sysdeps/h8300/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/h8300/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/h8300/pt-machine.h	(working copy)
@@ -23,11 +23,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-
 /* Spinlock implementation; required.  */
 PT_EI long int
 testandset (int *spinlock)
Index: uClibc/libpthread/linuxthreads.old/sysdeps/v850/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/v850/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/v850/pt-machine.h	(working copy)
@@ -12,7 +12,7 @@
  */
 
 #ifndef PT_EI
-# define PT_EI extern inline
+# define PT_EI static inline
 #endif
 
 /* Get some notion of the current stack.  Need not be exactly the top
Index: uClibc/libpthread/linuxthreads.old/sysdeps/ia64/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/ia64/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/ia64/pt-machine.h	(working copy)
@@ -28,12 +28,9 @@
                      size_t __child_stack_size, int __flags, void *__arg, ...);
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Make sure gcc doesn't try to be clever and move things around on
    us. We need to use _exactly_ the address the user gave us, not some
    alias that contains the same information.  */
Index: uClibc/libpthread/linuxthreads.old/sysdeps/nios/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/nios/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/nios/pt-machine.h	(working copy)
@@ -23,10 +23,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
 /* Spinlock implementation; required.  */
 /* it is weird and dangerous to disable interrupt in userspace, but for nios
    what else we can do before we have a swap like instruction?  This is better
Index: uClibc/libpthread/linuxthreads.old/sysdeps/mips/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/mips/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/mips/pt-machine.h	(working copy)
@@ -56,13 +56,9 @@
 
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
-
 /* Spinlock implementation; required.  */
 
 PT_EI long int
Index: uClibc/libpthread/linuxthreads.old/sysdeps/sh/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/sh/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/sh/pt-machine.h	(working copy)
@@ -24,12 +24,9 @@
 
 #ifndef __ASSEMBLER__
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Spinlock implementation; required.  */
 PT_EI long int
 testandset (int *spinlock)
Index: uClibc/libpthread/linuxthreads.old/sysdeps/bfin/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads.old/sysdeps/bfin/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads.old/sysdeps/bfin/pt-machine.h	(working copy)
@@ -22,11 +22,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-
 #include <asm/unistd.h>
 /* Spinlock implementation; required.  */
 /* The semantics of the TESTSET instruction cannot be guaranteed. We cannot
Index: uClibc/libpthread/linuxthreads/internals.h
===================================================================
--- uClibc/libpthread/linuxthreads/internals.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/internals.h	(working copy)
@@ -531,9 +531,9 @@
 # define __manager_thread __pthread_manager_threadp
 #endif
 
-extern __always_inline pthread_descr
+static __always_inline pthread_descr
 check_thread_self (void);
-extern __always_inline pthread_descr
+static __always_inline pthread_descr
 check_thread_self (void)
 {
   pthread_descr self = thread_self ();
Index: uClibc/libpthread/linuxthreads/sysdeps/arm/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/arm/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/arm/pt-machine.h	(working copy)
@@ -23,12 +23,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* This will not work on ARM1 or ARM2 because SWP is lacking on those
    machines.  Unfortunately we have no way to detect this at compile
    time; let's hope nobody tries to use one.  */
Index: uClibc/libpthread/linuxthreads/sysdeps/m68k/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/m68k/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/m68k/pt-machine.h	(working copy)
@@ -23,12 +23,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Spinlock implementation; required.  */
 PT_EI long int
 testandset (int *spinlock)
Index: uClibc/libpthread/linuxthreads/sysdeps/alpha/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/alpha/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/alpha/pt-machine.h	(working copy)
@@ -24,7 +24,7 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
 #ifdef __linux__
@@ -33,9 +33,6 @@
 # include <machine/pal.h>
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Get some notion of the current stack.  Need not be exactly the top
    of the stack, just something somewhere in the current frame.  */
 #define CURRENT_STACK_FRAME  stack_pointer
Index: uClibc/libpthread/linuxthreads/sysdeps/hppa/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/hppa/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/hppa/pt-machine.h	(working copy)
@@ -25,12 +25,9 @@
 #include <bits/initspin.h>
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Get some notion of the current stack.  Need not be exactly the top
    of the stack, just something somewhere in the current frame.  */
 #define CURRENT_STACK_FRAME  stack_pointer
Index: uClibc/libpthread/linuxthreads/sysdeps/i386/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/i386/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/i386/pt-machine.h	(working copy)
@@ -29,12 +29,13 @@
 
 #ifndef __ASSEMBLER__
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
+/*
 extern long int testandset (int *spinlock);
 extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
+*/
 /* Get some notion of the current stack.  Need not be exactly the top
    of the stack, just something somewhere in the current frame.  */
 #define CURRENT_STACK_FRAME  __builtin_frame_address (0)
Index: uClibc/libpthread/linuxthreads/sysdeps/x86_64/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/x86_64/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/x86_64/pt-machine.h	(working copy)
@@ -28,12 +28,9 @@
 
 
 # ifndef PT_EI
-#  define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 # endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Get some notion of the current stack.  Need not be exactly the top
    of the stack, just something somewhere in the current frame.  */
 # define CURRENT_STACK_FRAME  stack_pointer
Index: uClibc/libpthread/linuxthreads/sysdeps/cris/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/cris/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/cris/pt-machine.h	(working copy)
@@ -22,12 +22,9 @@
 #define _PT_MACHINE_H   1
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 PT_EI long int
 testandset (int *spinlock)
 {
Index: uClibc/libpthread/linuxthreads/sysdeps/ia64/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/ia64/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/ia64/pt-machine.h	(working copy)
@@ -24,12 +24,9 @@
 #include <ia64intrin.h>
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Make sure gcc doesn't try to be clever and move things around on
    us. We need to use _exactly_ the address the user gave us, not some
    alias that contains the same information.  */
Index: uClibc/libpthread/linuxthreads/sysdeps/mips/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/mips/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/mips/pt-machine.h	(working copy)
@@ -28,13 +28,9 @@
 #include <sys/tas.h>
 
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
-
 /* Spinlock implementation; required.  */
 
 PT_EI long int
Index: uClibc/libpthread/linuxthreads/sysdeps/sh/pt-machine.h
===================================================================
--- uClibc/libpthread/linuxthreads/sysdeps/sh/pt-machine.h	(revision 20365)
+++ uClibc/libpthread/linuxthreads/sysdeps/sh/pt-machine.h	(working copy)
@@ -24,12 +24,9 @@
 
 #ifndef __ASSEMBLER__
 #ifndef PT_EI
-# define PT_EI extern inline __attribute__ ((always_inline))
+# define PT_EI static inline
 #endif
 
-extern long int testandset (int *spinlock);
-extern int __compare_and_swap (long int *p, long int oldval, long int newval);
-
 /* Spinlock implementation; required.  */
 PT_EI long int
 testandset (int *spinlock)
