choice
	prompt "Target Architecture"
	default BR2_i386
	help
	  Select the target architecture family to build for.

config BR2_alpha
	bool "alpha"
config BR2_arm
	bool "arm"
config BR2_armeb
	bool "armeb"
config BR2_avr32
	bool "avr32"
config BR2_bfin
	bool "bfin"
config BR2_cris
	bool "cris"
config BR2_ia64
	bool "ia64"
config BR2_i386
	bool "i386"
config BR2_m68k
	bool "m68k"
config BR2_mips
	bool "mips"
config BR2_mipsel
	bool "mipsel"
config BR2_nios2
	bool "nios2"
config BR2_powerpc
	bool "powerpc"
config BR2_s390
	bool "s390"
config BR2_sh
	bool "superh"
config BR2_sh64
	bool "superh64"
config BR2_sparc
	bool "sparc"
config BR2_sparc64
	bool "sparc64"
config BR2_x86_64
	bool "x86_64"
endchoice

#
# Keep the variants separate, there's no need to clutter everything else.
# sh is fairly "special" in this regard, as virtually everyone else has
# things kept down to a _sensible_ number of target variants. No such
# luck for sh..
#
choice
	prompt "Target Architecture Variant"
	depends on BR2_arm || BR2_armeb
	default BR2_generic_arm
	help
	  Specific CPU variant to use

config BR2_generic_arm
	bool "generic_arm"
config BR2_arm7tdmi
	bool "arm7tdmi"
config BR2_arm610
	bool "arm610"
config BR2_arm710
	bool "arm710"
config BR2_arm720t
	bool "arm720t"
config BR2_arm920t
	bool "arm920t"
config BR2_arm922t
	bool "arm922t"
config BR2_arm926t
	bool "arm926t"
config BR2_arm10t
	bool "arm10t"
config BR2_arm1136jf_s
	bool "arm1136jf_s"
config BR2_arm1176jz_s
	bool "arm1176jz-s"
config BR2_arm1176jzf_s
	bool "arm1176jzf-s"
config BR2_sa110
	bool "sa110"
config BR2_sa1100
	bool "sa1100"
config BR2_xscale
	bool "xscale"
config BR2_iwmmxt
	bool "iwmmxt"
endchoice

config BR2_ARM_TYPE
	string
	default GENERIC_ARM	if BR2_generic_arm
	default ARM610		if BR2_arm610
	default ARM710		if BR2_arm710
	default ARM7TDMI	if BR2_arm7tdmi
	default ARM720T		if BR2_arm720t
	default ARM920T		if BR2_arm920t
	default ARM922T		if BR2_arm922t
	default ARM926T		if BR2_arm926t
	default ARM10T		if BR2_arm10t
	default ARM1136JF_S	if BR2_arm1136jf_s
	default ARM1176JZ_S	if BR2_arm1176jz_s
	default ARM1176JZF_S	if BR2_arm1176jzf_s
	default ARM_SA110	if BR2_sa110
	default ARM_SA1100	if BR2_sa1100
	default ARM_XSCALE	if BR2_xscale
	default ARM_IWMMXT	if BR2_iwmmxt

choice
	prompt "Target ABI"
	depends on BR2_arm || BR2_armeb
	default BR2_ARM_OABI
	help
	  Application Binary Interface to use

config BR2_ARM_OABI
	bool "OABI"
config BR2_ARM_EABI
	bool "EABI"
endchoice

choice
	prompt "Target Architecture Variant"
	depends on BR2_mips || BR2_mipsel
	default BR2_mips_3 if BR2_mips
	default BR2_mips_1 if BR2_mipsel
	help
	  Specific CPU variant to use

	  64bit cabable: 3, 4, 64, 64r2
	  non-64bit capable: 1, 2, 32, 32r2

config BR2_mips_1
	bool "mips I (generic)"
config BR2_mips_2
	bool "mips II"
config BR2_mips_3
	bool "mips III"
config BR2_mips_4
	bool "mips IV"
config BR2_mips_32
	bool "mips 32"
config BR2_mips_32r2
	bool "mips 32r2"
config BR2_mips_64
	bool "mips 64"
config BR2_mips_64r2
	bool "mips 64r2"
config BR2_mips_16
	bool "mips 16"
endchoice


choice
	prompt "Target ABI"
	depends on BR2_mips || BR2_mipsel
	default BR_mips_ABI_O32 if BR_mips_32 || BR_mips_32r2
	default BR_mips_ABI_N32 if BR_mips_64 || BR_mips_64r2
	help
	  Application Binary Interface to use

config BR2_MIPS_OABI32
	bool "o32"
config BR2_MIPS_ABI32
	bool "n32"
	depends on BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16
config BR2_MIPS_EABI
	bool "eabi"
	depends on BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16
config BR2_MIPS_ABI64
	bool "n64"
	depends on BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16
config BR2_MIPS_OABI64
	bool "o64"
	depends on BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16
config BR2_MIPS_ABI_none
	bool "unspecified"
	depends on BR2_mips_16
	help
	  Unspecified ABI leaves ABI selection blank.
endchoice

choice
	prompt "Target Architecture Variant"
	depends on BR2_avr32
config BR2_at32ap7000
	bool "AT32AP7000"
config BR2_at32ap7001
	bool "AT32AP7001"
config BR2_at32ap7002
	bool "AT32AP7002"
endchoice


choice
	prompt "Target Architecture Variant"
	depends on BR2_sh
	default BR2_sh4
	help
	  Specific CPU variant to use

config BR2_sh2a_nofpueb
	bool "sh2a_nofpueb"
config BR2_sh2eb
	bool "sh2eb"
config BR2_sh3
	bool "sh3"
config BR2_sh3eb
	bool "sh3eb"
config BR2_sh4
	bool "sh4"
config BR2_sh4eb
	bool "sh4eb"
endchoice

#
# gcc builds libstdc++ differently depending on the
# host tuplet given to it, so let people choose
#
choice
	prompt "Target Architecture Variant"
	depends on BR2_i386
	default BR2_x86_i386
	help
	  Specific CPU variant to use

config BR2_x86_i386
	bool "i386"
config BR2_x86_i486
	bool "i486"
config BR2_x86_i586
	bool "i586"
config BR2_x86_i686
	bool "i686"
config BR2_x86_pentiumpro
	bool "pentium pro"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_pentium_mmx
	bool "pentium MMX"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_pentium_m
	bool "pentium mobile"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_pentium2
	bool "pentium2"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_pentium3
	bool "pentium3"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_pentium4
	bool "pentium4"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_prescott
	bool "prescott"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_nocona
	bool "nocona"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_core2
	bool "core2"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_k6
	bool "k6"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_k6_2
	bool "k6-2"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_athlon
	bool "athlon"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_athlon_4
	bool "athlon-4"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_opteron
	bool "opteron"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_opteron_sse3
	bool "opteron w/ SSE3"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_barcelona
	bool "barcelona"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_geode
	bool "geode"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_c3
	bool "cyrix 3 (MMX + 3dNOW!)"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_winchip_c6
	bool "IDT winchip C6 (i486 + slow MMX)"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
config BR2_x86_winchip2
	bool "IDT winchip2 (i486 +MMX +SSE)"
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
endchoice

choice
	prompt "Target Architecture Variant"
	depends on BR2_x86_64
	depends on BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE
	default BR2_x86_64_core2
	help
	  Specific CPU variant to use

config BR2_x86_64_barcelona
	bool "barcelona"
config BR2_x86_64_opteron_sse3
	bool "opteron w/ sse3"
config BR2_x86_64_opteron
	bool "opteron"
config BR2_x86_64_nocona
	bool "nocona"
config BR2_x86_64_core2
	bool "core2"
endchoice

choice
	prompt "Target Architecture Variant"
	depends on BR2_alpha
	default BR2_alpha_21064
	help
	  Specific CPU variant to use

config BR2_alpha_21064
	bool "21064"
config BR2_alpha_21164
	bool "21164"
config BR2_alpha_21164a
	bool "21164a"
config BR2_alpha_21164pc
	bool "21164pc"
config BR2_alpha_21264
	bool "21264"
config BR2_alpha_21264a
	bool "21264a"
endchoice

choice
	prompt "Target Architecture Variant"
	depends on BR2_s390
	default BR2_s390_g5
	help
	  Specific CPU variant to use

config BR2_s390_g5
	bool "g5"
config BR2_s390_g6
	bool "g6"
config BR2_s390_z900
	bool "z900"
config BR2_s390_z990
	bool "z990"
config BR2_s390_z9_109
	bool "z9_109"
endchoice

choice
	prompt "Target Architecture Variant"
	depends on BR2_sparc
	default BR2_sparc_v7
	help
	  Specific CPU variant to use

config BR2_sparc_v7
	bool "v7"
config BR2_sparc_cypress
	bool "cypress"
config BR2_sparc_v8
	bool "v8"
config BR2_sparc_supersparc
	bool "supersparc"
config BR2_sparc_sparclite
	bool "sparclite"
config BR2_sparc_f930
	bool "f930"
config BR2_sparc_f934
	bool "f934"
config BR2_sparc_hypersparc
	bool "hypersparc"
config BR2_sparc_sparclite86x
	bool "sparclite86x"
config BR2_sparc_sparclet
	bool "sparclet"
config BR2_sparc_tsc701
	bool "tsc701"
config BR2_sparc_v9
	bool "v9"
config BR2_sparc_v9a
	bool "v9a"
config BR2_sparc_v9b
	bool "v9b"
config BR2_sparc_ultrasparc
	bool "ultrasparc"
config BR2_sparc_ultrasparc3
	bool "ultrasparc3"
config BR2_sparc_niagara
	bool "niagara"
endchoice

choice
	prompt "Target Architecture Variant"
	depends on BR2_sparc64
	default BR2_sparc64_v9
	help
	  Specific CPU variant to use

config BR2_sparc64_v9
	bool "v9"
config BR2_sparc64_v9a
	bool "v9a"
config BR2_sparc64_v9b
	bool "v9b"
config BR2_sparc64_ultrasparc
	bool "ultrasparc"
config BR2_sparc64_ultrasparc3
	bool "ultrasparc3"
config BR2_sparc64_niagara
	bool "niagara"
endchoice

config BR2_SPARC_TYPE
	string
	default V7	if BR2_sparc_v7 || BR2_sparc_cypress || BR2_sparc_sparclite || BR2_sparc_f930 || BR2_sparc_f934 || BR2_sparc_sparclite86x || BR2_sparc_sparclet || BR2_sparc_tsc701
	default V8	if BR2_sparc_v8 || BR2_sparc_supersparc || BR2_sparc_hypersparc
	default V9	if BR2_sparc_v9 || BR2_sparc_ultrasparc || BR2_sparc_ultrasparc3 || BR2_sparc_niagara || BR2_sparc64_v9 || BR2_sparc64_ultrasparc || BR2_sparc64_ultrasparc3 || BR2_sparc64_niagara
	default V9	if BR2_sparc_v9a || BR2_sparc64_v9a
	default V9B	if BR2_sparc_v9b || BR2_sparc64_v9b

choice
	prompt "Target Architecture Variant"
	depends on BR2_ia64
	default BR2_ia64_itanium2
	help
	  Specific CPU variant to use

config BR2_ia64_itanium1
	bool "itanium 1"
config BR2_ia64_itanium2
	bool "itanium 2"
endchoice

choice
	prompt "Target Architecture Variant"
	depends on BR2_powerpc
	default BR2_generic_powerpc
	help
	  Specific CPU variant to use
config BR2_generic_powerpc
	bool "generic"
config BR2_powerpc_401
	bool "401"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_403
	bool "403"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_405
	bool "405"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_405fp
	bool "405 with FPU"
config BR2_powerpc_440
	bool "440"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_440fp
	bool "440 with FPU"
config BR2_powerpc_464
	bool "464"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_464fp
	bool "464 with FPU"
config BR2_powerpc_505
	bool "505"
config BR2_powerpc_601
	bool "601"
config BR2_powerpc_602
	bool "602"
config BR2_powerpc_603
	bool "603"
config BR2_powerpc_603e
	bool "603e"
config BR2_powerpc_604
	bool "604"
config BR2_powerpc_604e
	bool "604e"
config BR2_powerpc_620
	bool "620"
config BR2_powerpc_630
	bool "630"
config BR2_powerpc_740
	bool "740"
config BR2_powerpc_7400
	bool "7400"
config BR2_powerpc_7450
	bool "7450"
config BR2_powerpc_750
	bool "750"
config BR2_powerpc_801
	bool "801"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_821
	bool "821"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_823
	bool "823"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_8540
	bool "8540"
config BR2_powerpc_e300c2
	bool "e300c2"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_e300c3
	bool "e300c3"
config BR2_powerpc_e500mc
	bool "e500mc"
config BR2_powerpc_860
	bool "860"
	select BR2_SOFT_FLOAT_FORCE
config BR2_powerpc_970
	bool "970"
config BR2_powerpc_cell
	bool "cell"
endchoice

choice
	prompt "Target Architecture Variant"
	depends on BR2_bfin
	default BR2_bf537
	help
	  Specific CPU variant to use
config BR2_bf522
	bool "bf522"
config BR2_bf525
	bool "bf525"
config BR2_bf527
	bool "bf527"
config BR2_bf531
	bool "bf531"
config BR2_bf532
	bool "bf532"
config BR2_bf533
	bool "bf533"
config BR2_bf534
	bool "bf534"
config BR2_bf536
	bool "bf536"
config BR2_bf537
	bool "bf537"
config BR2_bf538
	bool "bf538"
config BR2_bf539
	bool "bf539"
config BR2_bf542
	bool "bf542"
config BR2_bf544
	bool "bf544"
config BR2_bf548
	bool "bf548"
config BR2_bf549
	bool "bf549"
config BR2_bf561
	bool "bf561"
endchoice

config BR2_bfin_sirevision
	string "sirevision"
	depends on BR2_bfin
	default any
	help
	  If sirevision is none, no workarounds are enabled.
	  If sirevision is any, all workarounds for the targeted
	  processor will be enabled.
	  See man gcc for details.

	  Default: any

choice
	prompt "Target Architecture Variant"
	depends on BR2_cris
	default BR2_cris_cris
	help
	  Architecture variant.
config BR2_cris_cris
	bool "cris"
config BR2_cris_crisv32
	bool "crisv32"
endchoice
choice
	prompt "Target CPU Variant"
	depends on BR2_cris
	default BR2_cris_generic
	help
	  CPU variant.
config BR2_cris_generic
	bool "generic (v10)"
config BR2_cris_unknown
	bool "unknown (v0)"
config BR2_cris_etrax_4
	bool "etrax_4 (v3)"
config BR2_cris_etrax_100
	bool "etrax_100 (v8)"
config BR2_cris_etrax_100lx
	bool "etrax_100lx (v10)"
endchoice

choice
	prompt "Target Type"
	depends on BR2_m68k
	default BR2_m68k_type_m68k
	help
	  Specific architecture type to use

config BR2_m68k_type_m68k
	bool "m68k / M680x0"
	help
	  Normal 680xx

config BR2_m68k_type_coldfire
	bool "coldfire / 520X"
	help
	  ColdFire

	  Family | CPUs

	  51qe		51qe
	  5206		5202 5204 5206
	  5206e		5206e
	  5208		5207 5208
	  5211a		5210a 5211a
	  5213		5211 5212 5213
	  5216		5214 5216
	  52235		52230 52231 52232 52233 52234 52235
	  5225		5224 5225
	  5235		5232 5233 5234 5235 523x
	  5249		5249
	  5250		5250
	  5271		5270 5271
	  5272		5272
	  5275		5274 5275
	  5282		5280 5281 5282 528x
	  5307		5307
	  5329		5327 5328 5329 532x
	  5373		5372 5373 537x
	  5407		5407
	  5475		5470 5471 5472 5473 5474 5475 547x 5480 5481 5482 5483 5484 5485
endchoice

if BR2_m68k_type_m68k
choice
	prompt "Target CPU Variant"
	depends on BR2_m68k
	default BR2_m68k_cpu_m68k_none
	help
	  Specific CPU variant to use

config BR2_m68k_cpu_m68k_none
	bool "none"
	help
	  Select this dummy if you do not want to use a specific CPU.

config BR2_m68k_cpu_68000
	bool "68000"
	select BR2_HAVE_NOMMU
config BR2_m68k_cpu_68010
	bool "68010"
	select BR2_HAVE_NOMMU
config BR2_m68k_cpu_68020
	bool "68020"
config BR2_m68k_cpu_68030
	bool "68030"
config BR2_m68k_cpu_68040
	bool "68040"
config BR2_m68k_cpu_68060
	bool "68060"
config BR2_m68k_cpu_68302
	bool "68302"
config BR2_m68k_cpu_68332
	bool "68332"
config BR2_m68k_cpu_cpu32
	bool "cpu32"
endchoice
endif

if BR2_m68k_type_coldfire
choice
	prompt "Target CPU Variant"
	depends on BR2_m68k
	default BR2_m68k_cpu_coldfire_none
	help
	  Specific CPU variant to use

config BR2_m68k_cpu_coldfire_none
	bool "none"
	help
	  Select this dummy if you do not want to use a specific CPU.

config BR2_m68k_cpu_coldfire_51qe
	bool "51qe"
	select BR2_HAVE_NOMMU
config BR2_m68k_cpu_coldfire_5202
	bool "5202"
	select BR2_HAVE_NOMMU
config BR2_m68k_cpu_coldfire_5204
	bool "5204"
	select BR2_HAVE_NOMMU
config BR2_m68k_cpu_coldfire_5206
	bool "5206"
	select BR2_HAVE_NOMMU
config BR2_m68k_cpu_coldfire_5206e
	bool "5206e"
config BR2_m68k_cpu_coldfire_5207
	bool "5207"
config BR2_m68k_cpu_coldfire_5208
	bool "5208"
config BR2_m68k_cpu_coldfire_5210a
	bool "5210a"
config BR2_m68k_cpu_coldfire_5211a
	bool "5211a"
config BR2_m68k_cpu_coldfire_5211
	bool "5211"
config BR2_m68k_cpu_coldfire_5212
	bool "5212"
config BR2_m68k_cpu_coldfire_5213
	bool "5213"
config BR2_m68k_cpu_coldfire_5214
	bool "5214"
config BR2_m68k_cpu_coldfire_5216
	bool "5216"
config BR2_m68k_cpu_coldfire_52230
	bool "52230"
config BR2_m68k_cpu_coldfire_52231
	bool "52231"
config BR2_m68k_cpu_coldfire_52232
	bool "52232"
config BR2_m68k_cpu_coldfire_52233
	bool "52233"
config BR2_m68k_cpu_coldfire_52234
	bool "52234"
config BR2_m68k_cpu_coldfire_52235
	bool "52235"
config BR2_m68k_cpu_coldfire_5224
	bool "5224"
config BR2_m68k_cpu_coldfire_5225
	bool "5225"
config BR2_m68k_cpu_coldfire_5232
	bool "5232"
config BR2_m68k_cpu_coldfire_5233
	bool "5233"
config BR2_m68k_cpu_coldfire_5234
	bool "5234"
config BR2_m68k_cpu_coldfire_5235
	bool "5235"
config BR2_m68k_cpu_coldfire_523x
	bool "523x"
config BR2_m68k_cpu_coldfire_5249
	bool "5249"
config BR2_m68k_cpu_coldfire_5250
	bool "5250"
config BR2_m68k_cpu_coldfire_5270
	bool "5270"
config BR2_m68k_cpu_coldfire_5271
	bool "5271"
config BR2_m68k_cpu_coldfire_5272
	bool "5272"
config BR2_m68k_cpu_coldfire_5274
	bool "5274"
config BR2_m68k_cpu_coldfire_5275
	bool "5275"
config BR2_m68k_cpu_coldfire_5280
	bool "5280"
config BR2_m68k_cpu_coldfire_5281
	bool "5281"
config BR2_m68k_cpu_coldfire_5282
	bool "5282"
config BR2_m68k_cpu_coldfire_528x
	bool "528x"
config BR2_m68k_cpu_coldfire_5307
	bool "5307"
config BR2_m68k_cpu_coldfire_5327
	bool "5327"
config BR2_m68k_cpu_coldfire_5328
	bool "5328"
config BR2_m68k_cpu_coldfire_5329
	bool "5329"
config BR2_m68k_cpu_coldfire_532x
	bool "532x"
config BR2_m68k_cpu_coldfire_5372
	bool "5372"
config BR2_m68k_cpu_coldfire_5373
	bool "5373"
config BR2_m68k_cpu_coldfire_537x
	bool "537x"
config BR2_m68k_cpu_coldfire_5407
	bool "5407"
config BR2_m68k_cpu_coldfire_5470
	bool "5470"
config BR2_m68k_cpu_coldfire_5471
	bool "5471"
config BR2_m68k_cpu_coldfire_5472
	bool "5472"
config BR2_m68k_cpu_coldfire_5473
	bool "5473"
config BR2_m68k_cpu_coldfire_5474
	bool "5474"
config BR2_m68k_cpu_coldfire_5475
	bool "5475"
config BR2_m68k_cpu_coldfire_547x
	bool "547x"
config BR2_m68k_cpu_coldfire_5480
	bool "5480"
config BR2_m68k_cpu_coldfire_5481
	bool "5481"
config BR2_m68k_cpu_coldfire_5482
	bool "5482"
config BR2_m68k_cpu_coldfire_5483
	bool "5483"
config BR2_m68k_cpu_coldfire_5484
	bool "5484"
config BR2_m68k_cpu_coldfire_5485
	bool "5485"
endchoice
endif

if 0
choice
	prompt "Target tune"
	depends on BR2_m68k
	default BR2_m68k_tune_none
	help
	  Specific CPU variant to generate code for per default
config BR2_m68k_68000
	bool "68000"
	depends on BR2_m68k_type_m68k
config BR2_m68k_68010
	bool "68010"
	depends on BR2_m68k_type_m68k
config BR2_m68k_68020
	bool "68020"
	depends on BR2_m68k_type_m68k
config BR2_m68k_68030
	bool "68030"
	depends on BR2_m68k_type_m68k
config BR2_m68k_68040
	bool "68040"
	depends on BR2_m68k_type_m68k
config BR2_m68k_68060
	bool "68060"
	depends on BR2_m68k_type_m68k
config BR2_m68k_cpu32
	bool "cpu32"
	depends on BR2_m68k_type_m68k

config BR2_m68k_cfv1
	bool "cfv1"
	depends on BR2_m68k_type_coldfire
config BR2_m68k_cfv2
	bool "cfv2"
	depends on BR2_m68k_type_coldfire
config BR2_m68k_cfv3
	bool "cfv3"
	depends on BR2_m68k_type_coldfire
config BR2_m68k_cfv4
	bool "cfv4"
	depends on BR2_m68k_type_coldfire
config BR2_m68k_cfv4e
	bool "cfv4e"
	depends on BR2_m68k_type_coldfire
config BR2_m68k_tune_none
	bool "none"
config BR2_m68k_tune_tune
	bool "specify tune manually"
endchoice

config BR2_m68k_tune
	string "Manual target tune string"
	depends on BR2_m68k_tune_tune
	help
	  You can also use e.g. "68020-40" for code that needs to run
	  relatively well on 68020, 68030 and 68040 targets.
	  "68020-60" would do the same but additionally include 68060.
endif


config BR2_ARCH
	string
	default "alpha"		if BR2_alpha
	default "arm"		if BR2_arm
	default "armeb"		if BR2_armeb
	default "avr32"		if BR2_avr32
	default "bfin"		if BR2_bfin
	default "cris"		if BR2_cris_cris
	default "crisv32"	if BR2_cris_crisv32
	default "i386"		if BR2_x86_i386
	default "i486"		if BR2_x86_i486
	default "i586"		if BR2_x86_i586
	default "i686"		if BR2_x86_i686
	default "i686"		if BR2_x86_pentium4
	default "i686"		if BR2_x86_nocona
	default "i686"		if BR2_x86_core2
	default "ia64"		if BR2_ia64
	default "m68k"		if BR2_m68k
	default "mips"		if BR2_mips
	default "mipsel"	if BR2_mipsel
	default "nios2"		if BR2_nios2
	default "powerpc"	if BR2_powerpc
	default "s390"		if BR2_s390
	default "s390"		if BR2_s390x
	default "sh2a_nofpueb"	if BR2_sh2a_nofpueb
	default "sh2eb"		if BR2_sh2eb
	default "sh3"		if BR2_sh3
	default "sh3eb"		if BR2_sh3eb
	default "sh4"		if BR2_sh4
	default "sh4eb"		if BR2_sh4eb
	default "sh64"		if BR2_sh64
	default "sparc"		if BR2_sparc
	default "sparc64"	if BR2_sparc64
	default "x86_64"	if BR2_x86_64
	default "x86_64"	if BR2_x86_64_nocona
	default "x86_64"	if BR2_x86_64_core2
	default "x86_64"	if BR2_x86_64_opteron
	default "x86_64"	if BR2_x86_64_opteron_sse3
	default "x86_64"	if BR2_x86_64_barcelona


config BR2_ENDIAN
	string
	default "LITTLE" if BR2_arm || BR2_cris || BR2_i386 || BR2_mipsel || \
			    BR2_sh3 || BR2_sh4 || BR2_x86_64 || BR2_nios2 || \
			    BR2_sh64 || BR2_bfin
	default "BIG"    if BR2_alpha || BR2_armeb || BR2_avr32 || BR2_m68k || \
			    BR2_mips || \
			    BR2_powerpc || BR2_sh2a_nofpueb || BR2_sh2eb || \
			    BR2_sh3eb || BR2_sh4eb || BR2_sparc || BR2_sparc64

config BR2_GCC_TARGET_TUNE
	string
	default i386		if BR2_x86_i386
	default i486		if BR2_x86_i486
	default i586		if BR2_x86_i586
	default pentium-mmx	if BR2_x86_pentium_mmx
	default i686		if BR2_x86_i686
	default pentiumpro	if BR2_x86_pentiumpro
	default pentium-m	if BR2_x86_pentium_m
	default pentium2	if BR2_x86_pentium2
	default pentium3	if BR2_x86_pentium3
	default pentium4	if BR2_x86_pentium4
	default prescott	if BR2_x86_prescott
	default nocona		if BR2_x86_nocona
	default core2		if BR2_x86_core2
	default k8		if BR2_x86_opteron
	default k8-sse3		if BR2_x86_opteron_sse3
	default barcelona	if BR2_x86_barcelona
	default k6		if BR2_x86_k6
	default k6-2		if BR2_x86_k6_2
	default athlon		if BR2_x86_athlon
	default athlon-4	if BR2_x86_athlon_4
	default winchip-c6	if BR2_x86_winchip_c6
	default winchip2	if BR2_x86_winchip2
	default c3		if BR2_x86_c3
	default geode		if BR2_x86_geode
	default nocona		if BR2_x86_64_nocona
	default core2		if BR2_x86_64_core2
	default k8		if BR2_x86_64_opteron
	default k8-sse3		if BR2_x86_64_opteron_sse3
	default barcelona	if BR2_x86_64_barcelona
	default arm600		if BR2_arm600
	default arm610		if BR2_arm610
	default arm620		if BR2_arm620
	default arm7tdmi	if BR2_arm7tdmi
	default arm7tdmi	if BR2_arm720t
	default arm7tdmi	if BR2_arm740t
	default arm920		if BR2_arm920
	default arm920t		if BR2_arm920t
	default arm922t		if BR2_arm922t
	default arm9tdmi	if BR2_arm926t
	default arm1136j-s	if BR2_arm1136j_s
	default arm1136jf-s	if BR2_arm1136jf_s
	default arm1176jz-s	if BR2_arm1176jz_s
	default arm1176jzf-s	if BR2_arm1176jzf_s
	default strongarm110	if BR2_sa110
	default strongarm1100	if BR2_sa1100
	default xscale		if BR2_xscale
	default iwmmxt		if BR2_iwmmxt
	default ev4		if BR2_alpha_21064
	default ev5		if BR2_alpha_21164
	default ev56		if BR2_alpha_21164a
	default pca56		if BR2_alpha_21164pc
	default ev6		if BR2_alpha_21264
	default ev67		if BR2_alpha_21264a
#	default itanium		if BR2_ia64_itanium1
#	default itanium2	if BR2_ia64_itanium2
	default mips1		if BR2_mips_1
	default mips2		if BR2_mips_2
	default mips3		if BR2_mips_3
	default mips4		if BR2_mips_4
	default mips32		if BR2_mips_32
	default mips32r2	if BR2_mips_32r2
	default mips64		if BR2_mips_64
	default mips64r2	if BR2_mips_64r2
	default mips16		if BR2_mips_16
	default common		if BR2_powerpc_generic
	default 401		if BR2_powerpc_401
	default 403		if BR2_powerpc_403
	default 405		if BR2_powerpc_405
	default 405fp		if BR2_powerpc_405fp
	default 440		if BR2_powerpc_440
	default 440fp		if BR2_powerpc_440fp
	default 464		if BR2_powerpc_464
	default 505		if BR2_powerpc_505
	default 601		if BR2_powerpc_601
	default 602		if BR2_powerpc_602
	default 603		if BR2_powerpc_603
	default 603e		if BR2_powerpc_603e
	default 604		if BR2_powerpc_604
	default 604e		if BR2_powerpc_604e
	default 620		if BR2_powerpc_620
	default 630		if BR2_powerpc_630
	default 740		if BR2_powerpc_740
	default 7400		if BR2_powerpc_7400
	default 7450		if BR2_powerpc_7450
	default 750		if BR2_powerpc_750
	default 801		if BR2_powerpc_801
	default 821		if BR2_powerpc_821
	default 823		if BR2_powerpc_823
	default 8540		if BR2_powerpc_8540
	default e300c2		if BR2_powerpc_e300c2
	default e300c3		if BR2_powerpc_e300c3
	default e500mc		if BR2_powerpc_e500mc
	default 860		if BR2_powerpc_860
	default 970		if BR2_powerpc_970
	default cell		if BR2_powerpc_cell
	default v7		if BR2_sparc_v7
	default cypress		if BR2_sparc_cypress
	default v8		if BR2_sparc_v8
	default supersparc	if BR2_sparc_supersparc
	default hypersparc	if BR2_sparc_hypersparc
	default sparclite	if BR2_sparc_sparclite
	default f930		if BR2_sparc_f930
	default f934		if BR2_sparc_f934
	default sparclite86x	if BR2_sparc_sparclite86x
	default sparclet	if BR2_sparc_sparclet
	default tsc701		if BR2_sparc_tsc701
	default v9		if BR2_sparc_v9 || BR2_sparc64_v9
	default v9		if BR2_sparc_v9a || BR2_sparc64_v9a
	default v9		if BR2_sparc_v9b || BR2_sparc64_v9b
	default ultrasparc	if BR2_sparc_ultrasparc || BR2_sparc64_ultrasparc
	default ultrasparc3	if BR2_sparc_ultrasparc3 || BR2_sparc64_ultrasparc3
	default niagara		if BR2_sparc_niagara || BR2_sparc64_niagara
	default g5		if BR2_s390_g5
	default g6		if BR2_s390_g6
	default z900		if BR2_s390_z900
	default z990		if BR2_s390_z990
	default z9-109		if BR2_s390_z9_109
config BR2_GCC_TARGET_FLAGS_TUNE
	string
	default 68000		if BR2_m68k_68000
	default 68010		if BR2_m68k_68010
	default 68020		if BR2_m68k_68020
	default 68030		if BR2_m68k_68030
	default 68040		if BR2_m68k_68040
	default 68060		if BR2_m68k_68060
	default cpu32		if BR2_m68k_cpu32
	default cfv1		if BR2_m68k_cfv1
	default cfv2		if BR2_m68k_cfv2
	default cfv3		if BR2_m68k_cfv3
	default cfv4		if BR2_m68k_cfv4
	default cfv4e		if BR2_m68k_cfv4e
	default $BR2_m68k_tune	if BR2_m68k_tune
	default v0		if BR2_cris_unknown
	default v10		if BR2_cris_generic
	default v3		if BR2_cris_etrax_4
	default v8		if BR2_cris_etrax_100
	default v10		if BR2_cris_etrax_100lx
	default $BR2_GCC_TARGET_TUNE if BR2_GCC_TARGET_TUNE

config BR2_GCC_TARGET_CPU
	string
	default bf522		if BR2_bf522
	default bf525		if BR2_bf525
	default bf527		if BR2_bf527
	default bf531		if BR2_bf531
	default bf532		if BR2_bf532
	default bf533		if BR2_bf533
	default bf534		if BR2_bf534
	default bf536		if BR2_bf536
	default bf537		if BR2_bf537
	default bf538		if BR2_bf538
	default bf539		if BR2_bf539
	default bf542		if BR2_bf542
	default bf544		if BR2_bf544
	default bf548		if BR2_bf548
	default bf549		if BR2_bf549
	default bf561		if BR2_bf561
config BR2_GCC_TARGET_FLAGS_CPU
	string
	default 51qe		if BR2_m68k_cpu_coldfire_51qe
	default 5202		if BR2_m68k_cpu_coldfire_5202
	default 5204		if BR2_m68k_cpu_coldfire_5204
	default 5206		if BR2_m68k_cpu_coldfire_5206
	default 5206e		if BR2_m68k_cpu_coldfire_5206e
	default 5207		if BR2_m68k_cpu_coldfire_5207
	default 5208		if BR2_m68k_cpu_coldfire_5208
	default 5210a		if BR2_m68k_cpu_coldfire_5210a
	default 5211a		if BR2_m68k_cpu_coldfire_5211a
	default 5211		if BR2_m68k_cpu_coldfire_5211
	default 5212		if BR2_m68k_cpu_coldfire_5212
	default 5213		if BR2_m68k_cpu_coldfire_5213
	default 5214		if BR2_m68k_cpu_coldfire_5214
	default 5216		if BR2_m68k_cpu_coldfire_5216
	default 52230		if BR2_m68k_cpu_coldfire_52230
	default 52231		if BR2_m68k_cpu_coldfire_52231
	default 52232		if BR2_m68k_cpu_coldfire_52232
	default 52233		if BR2_m68k_cpu_coldfire_52233
	default 52234		if BR2_m68k_cpu_coldfire_52234
	default 52235		if BR2_m68k_cpu_coldfire_52235
	default 5224		if BR2_m68k_cpu_coldfire_5224
	default 5225		if BR2_m68k_cpu_coldfire_5225
	default 5232		if BR2_m68k_cpu_coldfire_5232
	default 5233		if BR2_m68k_cpu_coldfire_5233
	default 5234		if BR2_m68k_cpu_coldfire_5234
	default 5235		if BR2_m68k_cpu_coldfire_5235
	default 523x		if BR2_m68k_cpu_coldfire_523x
	default 5249		if BR2_m68k_cpu_coldfire_5249
	default 5250		if BR2_m68k_cpu_coldfire_5250
	default 5270		if BR2_m68k_cpu_coldfire_5270
	default 5271		if BR2_m68k_cpu_coldfire_5271
	default 5272		if BR2_m68k_cpu_coldfire_5272
	default 5274		if BR2_m68k_cpu_coldfire_5274
	default 5275		if BR2_m68k_cpu_coldfire_5275
	default 5280		if BR2_m68k_cpu_coldfire_5280
	default 5281		if BR2_m68k_cpu_coldfire_5281
	default 5282		if BR2_m68k_cpu_coldfire_5282
	default 528x		if BR2_m68k_cpu_coldfire_528x
	default 5307		if BR2_m68k_cpu_coldfire_5307
	default 5327		if BR2_m68k_cpu_coldfire_5327
	default 5328		if BR2_m68k_cpu_coldfire_5328
	default 5329		if BR2_m68k_cpu_coldfire_5329
	default 532x		if BR2_m68k_cpu_coldfire_532x
	default 5372		if BR2_m68k_cpu_coldfire_5372
	default 5373		if BR2_m68k_cpu_coldfire_5373
	default 537x		if BR2_m68k_cpu_coldfire_537x
	default 5407		if BR2_m68k_cpu_coldfire_5407
	default 5470		if BR2_m68k_cpu_coldfire_5470
	default 5471		if BR2_m68k_cpu_coldfire_5471
	default 5472		if BR2_m68k_cpu_coldfire_5472
	default 5473		if BR2_m68k_cpu_coldfire_5473
	default 5474		if BR2_m68k_cpu_coldfire_5474
	default 5475		if BR2_m68k_cpu_coldfire_5475
	default 547x		if BR2_m68k_cpu_coldfire_547x
	default 5480		if BR2_m68k_cpu_coldfire_5480
	default 5481		if BR2_m68k_cpu_coldfire_5481
	default 5482		if BR2_m68k_cpu_coldfire_5482
	default 5483		if BR2_m68k_cpu_coldfire_5483
	default 5484		if BR2_m68k_cpu_coldfire_5484
	default 5485		if BR2_m68k_cpu_coldfire_5485
	default 68000		if BR2_m68k_cpu_68000
	default 68010		if BR2_m68k_cpu_68010
	default 68020		if BR2_m68k_cpu_68020
	default 68030		if BR2_m68k_cpu_68030
	default 68040		if BR2_m68k_cpu_68040
	default 68060		if BR2_m68k_cpu_68060
	default 68302		if BR2_m68k_cpu_68302
	default 68332		if BR2_m68k_cpu_68332
	default cpu32		if BR2_m68k_cpu_cpu32
	default $BR2_GCC_TARGET_CPU if BR2_GCC_TARGET_CPU

config BR2_GCC_TARGET_FLAGS_SUBCPU
	string
	default $BR2_bfin_sirevision if BR2_bfin_sirevision

config BR2_GCC_TARGET_ARCH
	string
	default i386		if BR2_x86_i386
	default i486		if BR2_x86_i486
	default i586		if BR2_x86_i586
	default pentium-mmx	if BR2_x86_pentium_mmx
	default i686		if BR2_x86_i686
	default pentiumpro	if BR2_x86_pentiumpro
	default pentium-m	if BR2_x86_pentium_m
	default pentium2	if BR2_x86_pentium2
	default pentium3	if BR2_x86_pentium3
	default pentium4	if BR2_x86_pentium4
	default prescott	if BR2_x86_prescott
	default nocona		if BR2_x86_nocona
	default core2		if BR2_x86_core2
	default k8		if BR2_x86_opteron
	default k8-sse3		if BR2_x86_opteron_sse3
	default barcelona	if BR2_x86_barcelona
	default k6		if BR2_x86_k6
	default k6-2		if BR2_x86_k6_2
	default athlon		if BR2_x86_athlon
	default athlon-4	if BR2_x86_athlon_4
	default winchip-c6	if BR2_x86_winchip_c6
	default winchip2	if BR2_x86_winchip2
	default c3		if BR2_x86_c3
	default geode		if BR2_x86_geode
	default iwmmxt		if BR2_iwmmxt
	default m68k		if BR2_m68k_type_m68k
	default cf		if BR2_m68k_type_coldfire
	default g5		if BR2_s390_g5
	default g6		if BR2_s390_g6
	default z900		if BR2_s390_z900
	default z990		if BR2_s390_z990
	default z9-109		if BR2_s390_z9_109
config BR2_GCC_TARGET_FLAGS_ARCH
	string
	default v0		if BR2_cris_unknown
	default v10		if BR2_cris_generic
	default v3		if BR2_cris_etrax_4
	default v8		if BR2_cris_etrax_100
	default v10		if BR2_cris_etrax_100lx
	default $BR2_GCC_TARGET_ARCH if BR2_GCC_TARGET_ARCH && !BR2_m68k_type_m68k && !BR2_m68k_type_coldfire

config BR2_GCC_TARGET_ABI
	string
	default apcs-gnu	if BR2_ARM_OABI
	default atpcs		if BR2_arm_dunno
	default aapcs		if BR2_arm_dunno
	default aapcs-linux	if BR2_ARM_EABI
	#default iwmmxt		if BR2_iwmmxt
	default 32		if BR2_MIPS_OABI32
	default n32		if BR2_MIPS_ABI32
	default eabi		if BR2_MIPS_EABI
	default o64		if BR2_MIPS_OABI64
	default n64		if BR2_MIPS_ABI64
	default mmixware	if BR2_mmix && BR2_MMIX_ABI_native
	default gnu		if BR2_mmix && !BR2_MMIX_ABI_native
	default altivec		if BR2_powerpc && BR2_PPC_ABI_altivec
	default no-altivec	if BR2_powerpc && BR2_PPC_ABI_no-altivec
	default spe		if BR2_powerpc && BR2_PPC_ABI_spe
	default no-spe		if BR2_powerpc && BR2_PPC_ABI_no-spe
	default ibmlongdouble	if BR2_powerpc && BR2_PPC_ABI_ibmlongdouble
	default ieeelongdouble	if BR2_powerpc && BR2_PPC_ABI_ieeelongdouble
config BR2_GCC_TARGET_FLAGS_ABI
	string
	default $BR2_GCC_TARGET_ABI if BR2_GCC_TARGET_ABI

